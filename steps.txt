 - basic shape with keyboard input example. OK
 - basic core of afk. OK
 - keyboard flyaround. OK
 - keyboard control of 3D object, making sure it behaves correctly.  (maybe make a simple camera-follow object...) OK
 - very basic points-grid landscape. OK
 - opencl example. OK
 - basic cubic cell landscape. OK
 - determine which cells to draw by camera facing. OK
 - landscape subdivision and LoD. OK
 - random number generator. OK
 - randomly distributed landscape in a grid (smallest cells only). OK
 - apply lighting to protagonist object. OK
 - triangular, lit landscape.  (no tessellation, just pre-defined triangle strips). OK
 - x/z only terrain, with horizontal LoD.  all terrain mated to the cells with y=0.  terrain of arbitrary height.  (expected glitch: when you can't see the floor, you can't see the terrain however high.  Unable to look up at mountains or down into troughs) OK
 - parallel evaluation via task queueing.
 - land map cache eviction; use constant memory
 - correct seam stitching.  See todo_stitching.txt.
 - migrate terrain geometry to adjacent cells along the y-axis.  vertical terrain LoD.
 - random protagonist with flat surfaces.
 - random objects in each cell.  object LoD.
 - curved terrain (interpolated normals, curved terrain features).
 - object movement.  (simplest AI.)
 - object/object collision.
 - object/terrain collision.
 - adjust detail pitch on the fly to maintain a framerate.
 - compute location of points-grid with opencl and feed back.
 - opencl random number generator.
 - tessellation example.
 - tessellated landscape.

